{"version":3,"sources":["shared/components/UIElements/Card.js","shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js"],"names":["Card","props","className","style","children","Map","mapRef","useRef","center","zoom","useEffect","map","window","google","maps","current","Marker","position","ref","PlaceItem","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","useState","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","a","process","id","Authorization","token","onDelete","Fragment","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","coordinates","footerClas","inverse","danger","LoadingSpinner","asOverlay","src","image","alt","title","description","userId","creatorId","to","PlaceList","items","length","place","key","creator","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","responseData","places","fetchPlaces","deletedPlaceId","prevPlaces","filter"],"mappings":"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","file":"static/js/7.33123ecd.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useRef, useEffect } from \"react\";\r\n\r\nimport \"./Map.css\";\r\n\r\nconst Map = (props) => {\r\n  const mapRef = useRef();\r\n\r\n  const { center, zoom } = props;\r\n\r\n  // Google map usage\r\n  useEffect(() => {\r\n    const map = new window.google.maps.Map(mapRef.current, {\r\n      center: center,\r\n      zoom: zoom,\r\n    });\r\n\r\n    new window.google.maps.Marker({ position: center, map: map });\r\n  }, [center, zoom]);\r\n\r\n  return (\r\n    <div\r\n      ref={mapRef}\r\n      className={`map ${props.className}`}\r\n      style={props.style}\r\n    ></div>\r\n  );\r\n\r\n  // // OpenLayers map usage\r\n  // useEffect(() => {\r\n  // new window.ol.Map({\r\n  //   target: mapRef.current.id,\r\n  //   layers: [\r\n  //     new window.ol.layer.Tile({\r\n  //       source: new window.ol.source.OSM()\r\n  //     })\r\n  //   ],\r\n  //   view: new window.ol.View({\r\n  //     center: window.ol.proj.fromLonLat([center.lng, center.lat]),\r\n  //     zoom: zoom\r\n  //   })\r\n  // });\r\n  // }, [center, zoom]);\r\n\r\n  // return (\r\n  //   <div\r\n  //     ref={mapRef}\r\n  //     className={`map ${props.className}`}\r\n  //     style={props.style}\r\n  //     id=\"map\"\r\n  //   ></div>\r\n  // );\r\n};\r\n\r\nexport default Map;\r\n","import React, { useState, useContext } from \"react\";\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Modal from \"../../shared/components/UIElements/Modal\";\r\nimport Map from \"../../shared/components/UIElements/Map\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport \"./PlaceItem.css\";\r\n\r\nconst PlaceItem = (props) => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const [showMap, setShowMap] = useState(false);\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n\r\n  const openMapHandler = () => setShowMap(true);\r\n\r\n  const closeMapHandler = () => setShowMap(false);\r\n\r\n  const showDeleteWarningHandler = () => setShowConfirmModal(true);\r\n\r\n  const cancelDeleteHandler = () => setShowConfirmModal(false);\r\n\r\n  const confirmDeleteHandler = async () => {\r\n    setShowConfirmModal(false);\r\n    try {\r\n      await sendRequest(\r\n        process.env.REACT_APP_URL + `/places/${props.id}`,\r\n        \"DELETE\",\r\n        null,\r\n        {\r\n          Authorization: `Bearer ${auth.token}`,\r\n        }\r\n      );\r\n      props.onDelete(props.id);\r\n    } catch (error) {}\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Modal\r\n        show={showMap}\r\n        onCancel={closeMapHandler}\r\n        header={props.address}\r\n        contentClass=\"place-item__modal-content\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\r\n      >\r\n        <div className=\"map-container\">\r\n          <Map center={props.coordinates} zoom={17} />\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        show={showConfirmModal}\r\n        onCancel={cancelDeleteHandler}\r\n        header=\"Are you sure?\"\r\n        footerClas=\"place-item__modal-actions\"\r\n        footer={\r\n          <React.Fragment>\r\n            <Button inverse onClick={cancelDeleteHandler}>\r\n              NO\r\n            </Button>\r\n            <Button danger onClick={confirmDeleteHandler}>\r\n              YES\r\n            </Button>\r\n          </React.Fragment>\r\n        }\r\n      >\r\n        <p>Do you want to proceed?Please note it cant be undone thereafter!</p>\r\n      </Modal>\r\n      <li className=\"place-item\">\r\n        <Card className=\"place-item__content\">\r\n          {isLoading && <LoadingSpinner asOverlay />}\r\n          <div className=\"place-item__image\">\r\n            <img\r\n              src={`${process.env.REACT_APP_IMG}${props.image}`}\r\n              alt={props.title}\r\n            />\r\n          </div>\r\n          <div className=\"place-item__info\">\r\n            <h2>{props.title}</h2>\r\n            <h3>{props.address}</h3>\r\n            <p>{props.description}</p>\r\n          </div>\r\n          <div className=\"place-item__actions\">\r\n            <Button inverse onClick={openMapHandler}>\r\n              VIEW\r\n            </Button>\r\n            {auth.userId === props.creatorId && (\r\n              <Button to={`/places/${props.id}`}>EDIT</Button>\r\n            )}\r\n            {auth.userId === props.creatorId && (\r\n              <Button danger onClick={showDeleteWarningHandler}>\r\n                DELETE\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PlaceItem;\r\n","import React from \"react\";\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport PlaceItem from \"./PlaceItem\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport \"./PlaceList.css\";\r\n\r\nconst PlaceList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"place-list center\">\r\n        <Card>\r\n          <h2>No places found. Maybe create one?</h2>\r\n          <Button to=\"/places/new\">Share Place</Button>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className=\"place-list\">\r\n      {props.items.map((place) => (\r\n        <PlaceItem\r\n          key={place.id}\r\n          id={place.id}\r\n          image={place.image}\r\n          title={place.title}\r\n          description={place.description}\r\n          address={place.address}\r\n          creatorId={place.creator}\r\n          coordinates={place.location}\r\n          onDelete={props.onDeletePlace}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default PlaceList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport PlaceList from \"../components/PlaceList\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nconst UserPlaces = () => {\r\n  const [loadedPlaces, setLoadedPlaces] = useState();\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const userId = useParams().userId;\r\n\r\n  useEffect(() => {\r\n    const fetchPlaces = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_URL + `/places/user/${userId}`\r\n        );\r\n\r\n        setLoadedPlaces(responseData.places);\r\n      } catch (error) {}\r\n    };\r\n    fetchPlaces();\r\n  }, [sendRequest, userId]);\r\n\r\n  const placeDeletedHandler = (deletedPlaceId) => {\r\n    setLoadedPlaces((prevPlaces) =>\r\n      prevPlaces.filter((place) => place.id !== deletedPlaceId)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedPlaces && (\r\n        <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UserPlaces;\r\n"],"sourceRoot":""}