{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","token","userId","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","logoutTimer","MainHeader","children","NavLinks","auth","useContext","to","exact","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Fragment","Users","React","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","useCallback","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.bb16460a.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext({\r\n  isLoggedIn: false,\r\n  token: null,\r\n  userId: null,\r\n  login: () => {},\r\n  logout: () => {},\r\n});\r\n","import React from 'react';\r\n\r\nimport './LoadingSpinner.css';\r\n\r\nconst LoadingSpinner = props => {\r\n  return (\r\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\r\n      <div className=\"lds-dual-ring\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './Backdrop.css';\r\n\r\nconst Backdrop = props => {\r\n  return ReactDOM.createPortal(\r\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\r\n    document.getElementById('backdrop-hook')\r\n  );\r\n};\r\n\r\nexport default Backdrop;\r\n","import { useState, useCallback, useEffect } from \"react\";\r\n\r\nlet logoutTimer;\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(false);\r\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n  const [userId, setUserId] = useState(false);\r\n\r\n  const login = useCallback(\r\n    (uid, token, expirationDate) => {\r\n      setToken(token);\r\n      setUserId(uid);\r\n      const tokenExpirationDate =\r\n        expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n      setTokenExpirationDate(tokenExpirationDate);\r\n      localStorage.setItem(\r\n        \"userData\",\r\n        JSON.stringify({\r\n          userId: userId,\r\n          token: token,\r\n          expiration: tokenExpirationDate.toISOString(),\r\n        })\r\n      );\r\n    },\r\n    [userId]\r\n  );\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setUserId(null);\r\n    setTokenExpirationDate(null);\r\n    localStorage.removeItem(\"userData\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token && tokenExpirationDate) {\r\n      const remainingTime =\r\n        tokenExpirationDate.getTime() - new Date().getTime();\r\n      logoutTimer = setTimeout(logout, remainingTime);\r\n    } else {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, [token, logout, tokenExpirationDate]);\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    if (\r\n      storedData &&\r\n      storedData.token &&\r\n      new Date(storedData.expiration) > new Date()\r\n    ) {\r\n      login(\r\n        storedData.userId,\r\n        storedData.token,\r\n        new Date(storedData.expiration)\r\n      );\r\n    }\r\n  }, [login]);\r\n\r\n  return { token, login, logout, userId };\r\n};\r\n","import React from 'react'\r\n\r\nimport './MainHeader.css'\r\n\r\nconst MainHeader = props => {\r\n  return <header className=\"main-header\">\r\n    {props.children}\r\n  </header>\r\n}\r\n\r\nexport default MainHeader","import React, { useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\n\r\nimport \"./NavLinks.css\";\r\n\r\nconst NavLinks = (props) => {\r\n  const auth = useContext(AuthContext);\r\n\r\n  return (\r\n    <ul className=\"nav-links\">\r\n      <li>\r\n        <NavLink to=\"/\" exact>\r\n          ALL USERS\r\n        </NavLink>\r\n      </li>\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/places/new\">NEW PLACE</NavLink>\r\n        </li>\r\n      )}\r\n      {!auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <button onClick={auth.logout}>LOGOUT</button>\r\n        </li>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default NavLinks;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { CSSTransition } from 'react-transition-group'\r\n\r\nimport './SideDrawer.css'\r\n\r\nconst SideDrawer = props =>{\r\n  const content = <CSSTransition in={props.show} timeout={200} classNames=\"slide-in-left\" mountOnEnter unmountOnExit>\r\n      <aside className=\"side-drawer\" onClick={props.onClick}>\r\n        {props.children}\r\n      </aside>\r\n  </CSSTransition>\r\n  \r\n\r\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'))\r\n}\r\n\r\nexport default SideDrawer","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport MainHeader from './MainHeader'\r\nimport NavLinks from './NavLinks'\r\nimport SideDrawer from './SideDrawer'\r\nimport BackDrop from '../UIElements/Backdrop'\r\nimport './MainNavigation.css'\r\n\r\nconst MainNavigation = props => {\r\n  const[drawerIsOpen,setDrawerIsOpen] = useState(false)\r\n\r\n  const openDrawerHandler = () => {\r\n    setDrawerIsOpen(true)\r\n  }\r\n\r\n  const closeDrawerHandler = () => {\r\n    setDrawerIsOpen(false)\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n    {drawerIsOpen && <BackDrop onClick={closeDrawerHandler}/>}\r\n    <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\r\n      <nav className=\"main-navigation__drawer-nav\">\r\n        <NavLinks />\r\n      </nav>\r\n    </SideDrawer>\r\n    <MainHeader>\r\n    <button className=\"main-navigation__menu-btn\" onClick={openDrawerHandler}>\r\n      <span />\r\n      <span />\r\n      <span />\r\n    </button>\r\n    <h1 className=\"main-navigation__title\">\r\n      <Link to=\"/\">YourPlaces</Link></h1>\r\n    <nav className=\"main-navigation__header-nav\">\r\n      <NavLinks />\r\n    </nav>\r\n  </MainHeader>\r\n  </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default MainNavigation","import React, { Suspense } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n} from \"react-router-dom\";\r\n\r\n// import Users from \"./user/pages/Users\";\r\n// import NewPlace from \"./places/pages/NewPlace\";\r\n// import UserPlaces from \"./places/pages/UserPlaces\";\r\n// import UpdatePlace from \"./places/pages/UpdatePlace\";\r\n// import Auth from \"./user/pages/Auth\";\r\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\r\nimport { AuthContext } from \"./shared/context/auth-context\";\r\nimport { useAuth } from \"./shared/hooks/auth-hook\";\r\nimport LoadingSpinner from \"./shared/components/UIElements/LoadingSpinner\";\r\n\r\nconst Users = React.lazy(() => import(\"./user/pages/Users\"));\r\nconst NewPlace = React.lazy(() => import(\"./places/pages/NewPlace\"));\r\nconst UserPlaces = React.lazy(() => import(\"./places/pages/UserPlaces\"));\r\nconst UpdatePlace = React.lazy(() => import(\"./places/pages/UpdatePlace\"));\r\nconst Auth = React.lazy(() => import(\"./user/pages/Auth\"));\r\n\r\nconst App = () => {\r\n  const { token, userId, login, logout } = useAuth();\r\n\r\n  let routes;\r\n\r\n  if (token) {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <Users />\r\n        </Route>\r\n        <Route path=\"/:userId/places\" exact>\r\n          <UserPlaces />\r\n        </Route>\r\n        <Route path=\"/places/new\" exact>\r\n          <NewPlace />\r\n        </Route>\r\n        <Route path=\"/places/:placeId\">\r\n          <UpdatePlace />\r\n        </Route>\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    );\r\n  } else {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <Users />\r\n        </Route>\r\n        <Route path=\"/:userId/places\" exact>\r\n          <UserPlaces />\r\n        </Route>\r\n        <Route path=\"/auth\">\r\n          <Auth />\r\n        </Route>\r\n        <Redirect to=\"/auth\" />\r\n      </Switch>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isLoggedIn: !!token,\r\n        token: token,\r\n        userId: userId,\r\n        login: login,\r\n        logout: logout,\r\n      }}\r\n    >\r\n      <Router>\r\n        <MainNavigation />\r\n        <main>\r\n          <Suspense\r\n            fallback={\r\n              <div className=\"center\">\r\n                <LoadingSpinner />\r\n              </div>\r\n            }\r\n          >\r\n            {routes}\r\n          </Suspense>\r\n        </main>\r\n      </Router>\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}